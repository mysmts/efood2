{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  itens: []\n};\nconst carrinhoSlice = createSlice({\n  name: 'carrinho',\n  initialState,\n  reducers: {\n    adicionar: (state, action) => {\n      const produto = action.payload;\n      if (state.itens.find(p => p.id === produto.id)) {\n        alert('Item já adicionado');\n      } else {\n        //apesar do professor Gian, alertar sobre não ser correto por conta da imutabilidade eu sei que o immer, faz isso e por isso está funcionando a aplicação.\n        //por outro lado, na sequencia posso também usar o item que deixo comentado em substituição do PUSH < state.itens = [...state.itens, produto] >\n        // mas optei por deixar o push mesmo.\n        state.itens.push(produto);\n        // state.itens = [...state.itens, produto]\n      }\n    }\n  }\n});\nexport const {\n  adicionar\n} = carrinhoSlice.actions;\nexport default carrinhoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","itens","carrinhoSlice","name","reducers","adicionar","state","action","produto","payload","find","p","id","alert","push","actions","reducer"],"sources":["C:/Users/USER/Desktop/APOSTILA EBAC/EXERCÍCIOS EBAC/curso-frontend/Ebac_Sports/src/store/reducers/carrinho.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nimport { Produto } from '../../App'\r\n\r\ntype CarrinhoState = {\r\n  itens: Produto[]\r\n}\r\n\r\nconst initialState: CarrinhoState = {\r\n  itens: []\r\n}\r\n\r\nconst carrinhoSlice = createSlice({\r\n  name: 'carrinho',\r\n  initialState,\r\n  reducers: {\r\n    adicionar: (state, action: PayloadAction<Produto>) => {\r\n      const produto = action.payload\r\n\r\n      if (state.itens.find((p) => p.id === produto.id)) {\r\n        alert('Item já adicionado')\r\n      } else {\r\n        //apesar do professor Gian, alertar sobre não ser correto por conta da imutabilidade eu sei que o immer, faz isso e por isso está funcionando a aplicação.\r\n        //por outro lado, na sequencia posso também usar o item que deixo comentado em substituição do PUSH < state.itens = [...state.itens, produto] >\r\n        // mas optei por deixar o push mesmo.\r\n        state.itens.push(produto)\r\n        // state.itens = [...state.itens, produto]\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const { adicionar } = carrinhoSlice.actions\r\nexport default carrinhoSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAQ7D,MAAMC,YAA2B,GAAG;EAClCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACpD,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAE9B,IAAIH,KAAK,CAACL,KAAK,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC,EAAE;QAChDC,KAAK,CAAC,oBAAoB,CAAC;MAC7B,CAAC,MAAM;QACL;QACA;QACA;QACAP,KAAK,CAACL,KAAK,CAACa,IAAI,CAACN,OAAO,CAAC;QACzB;MACF;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAU,CAAC,GAAGH,aAAa,CAACa,OAAO;AAClD,eAAeb,aAAa,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}