{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  itens: [{\n    id: 1,\n    nomeContato: 'Paulo Henrique',\n    emailContato: 'ph@hotmail.com',\n    phoneContato: '(99)99999-9999'\n  }, {\n    id: 2,\n    nomeContato: 'Andre Mattos',\n    emailContato: 'amattos@hotmail.com',\n    phoneContato: '(99)99999-9999'\n  }, {\n    id: 3,\n    nomeContato: 'Priscila Alcantra',\n    emailContato: 'prisscila@hotmail.com',\n    phoneContato: '(99)99999-9999'\n  }, {\n    id: 4,\n    nomeContato: 'Romero Brito',\n    emailContato: 'Brito@outlook.com.br',\n    phoneContato: '(99)99999-9999'\n  }]\n};\nconst atividadesSlice = createSlice({\n  name: 'atividades',\n  initialState,\n  reducers: {\n    remover: (state, action) => {\n      state.itens = state.itens.filter(atividade => atividade.id !== action.payload);\n    },\n    editar: (state, action) => {\n      const indexDaTarefa = state.itens.findIndex(p => p.id === action.payload.id);\n      if (indexDaTarefa >= 0) {\n        state.itens[indexDaTarefa] = action.payload;\n      }\n    },\n    cadastrar: (state, action) => {\n      const cadastroJaExiste = state.itens.some(atividade => atividade.nomeContato.toLowerCase() === action.payload.nomeContato.toLowerCase());\n      if (cadastroJaExiste) {\n        alert('Já existe um contato com este nome');\n      } else {\n        const novoId = state.itens.length > 0 ? state.itens[state.itens.length - 1].id + 1 : 1;\n        state.itens.push({\n          ...action.payload,\n          id: novoId\n        });\n      }\n    }\n  }\n});\nexport const {\n  remover,\n  editar,\n  cadastrar\n} = atividadesSlice.actions;\nexport default atividadesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","itens","id","nomeContato","emailContato","phoneContato","atividadesSlice","name","reducers","remover","state","action","filter","atividade","payload","editar","indexDaTarefa","findIndex","p","cadastrar","cadastroJaExiste","some","toLowerCase","alert","novoId","length","push","actions","reducer"],"sources":["C:/Users/USER/Desktop/APOSTILA EBAC/EXERCÍCIOS EBAC/curso-frontend/PROJETO05/src/store/reducers/atividades.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport Tarefa from '../../models/Tarefa'\n\ntype AtividadeState = {\n  itens: Tarefa[]\n}\n\nconst initialState: AtividadeState = {\n  itens: [\n    {\n      id: 1,\n      nomeContato: 'Paulo Henrique',\n      emailContato: 'ph@hotmail.com',\n      phoneContato: '(99)99999-9999'\n    },\n    {\n      id: 2,\n      nomeContato: 'Andre Mattos',\n      emailContato: 'amattos@hotmail.com',\n      phoneContato: '(99)99999-9999'\n    },\n    {\n      id: 3,\n      nomeContato: 'Priscila Alcantra',\n      emailContato: 'prisscila@hotmail.com',\n      phoneContato: '(99)99999-9999'\n    },\n    {\n      id: 4,\n      nomeContato: 'Romero Brito',\n      emailContato: 'Brito@outlook.com.br',\n      phoneContato: '(99)99999-9999'\n    }\n  ]\n}\n\nconst atividadesSlice = createSlice({\n  name: 'atividades',\n  initialState,\n  reducers: {\n    remover: (state, action: PayloadAction<number>) => {\n      state.itens = state.itens.filter(\n        (atividade) => atividade.id !== action.payload\n      )\n    },\n    editar: (state, action: PayloadAction<Tarefa>) => {\n      const indexDaTarefa = state.itens.findIndex(\n        (p) => p.id === action.payload.id\n      )\n\n      if (indexDaTarefa >= 0) {\n        state.itens[indexDaTarefa] = action.payload\n      }\n    },\n    cadastrar: (state, action: PayloadAction<Tarefa>) => {\n      const cadastroJaExiste = state.itens.some(\n        (atividade) =>\n          atividade.nomeContato.toLowerCase() ===\n          action.payload.nomeContato.toLowerCase()\n      )\n      if (cadastroJaExiste) {\n        alert('Já existe um contato com este nome')\n      } else {\n        const novoId =\n          state.itens.length > 0\n            ? state.itens[state.itens.length - 1].id + 1\n            : 1\n        state.itens.push({ ...action.payload, id: novoId })\n      }\n    }\n  }\n})\n\nexport const { remover, editar, cadastrar } = atividadesSlice.actions\nexport default atividadesSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAA4B,GAAG;EACnCC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,gBAAgB;IAC7BC,YAAY,EAAE,gBAAgB;IAC9BC,YAAY,EAAE;EAChB,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,cAAc;IAC3BC,YAAY,EAAE,qBAAqB;IACnCC,YAAY,EAAE;EAChB,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,mBAAmB;IAChCC,YAAY,EAAE,uBAAuB;IACrCC,YAAY,EAAE;EAChB,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,cAAc;IAC3BC,YAAY,EAAE,sBAAsB;IACpCC,YAAY,EAAE;EAChB,CAAC;AAEL,CAAC;AAED,MAAMC,eAAe,GAAGP,WAAW,CAAC;EAClCQ,IAAI,EAAE,YAAY;EAClBP,YAAY;EACZQ,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACjDD,KAAK,CAACT,KAAK,GAAGS,KAAK,CAACT,KAAK,CAACW,MAAM,CAC7BC,SAAS,IAAKA,SAAS,CAACX,EAAE,KAAKS,MAAM,CAACG,OACzC,CAAC;IACH,CAAC;IACDC,MAAM,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAK;MAChD,MAAMK,aAAa,GAAGN,KAAK,CAACT,KAAK,CAACgB,SAAS,CACxCC,CAAC,IAAKA,CAAC,CAAChB,EAAE,KAAKS,MAAM,CAACG,OAAO,CAACZ,EACjC,CAAC;MAED,IAAIc,aAAa,IAAI,CAAC,EAAE;QACtBN,KAAK,CAACT,KAAK,CAACe,aAAa,CAAC,GAAGL,MAAM,CAACG,OAAO;MAC7C;IACF,CAAC;IACDK,SAAS,EAAEA,CAACT,KAAK,EAAEC,MAA6B,KAAK;MACnD,MAAMS,gBAAgB,GAAGV,KAAK,CAACT,KAAK,CAACoB,IAAI,CACtCR,SAAS,IACRA,SAAS,CAACV,WAAW,CAACmB,WAAW,CAAC,CAAC,KACnCX,MAAM,CAACG,OAAO,CAACX,WAAW,CAACmB,WAAW,CAAC,CAC3C,CAAC;MACD,IAAIF,gBAAgB,EAAE;QACpBG,KAAK,CAAC,oCAAoC,CAAC;MAC7C,CAAC,MAAM;QACL,MAAMC,MAAM,GACVd,KAAK,CAACT,KAAK,CAACwB,MAAM,GAAG,CAAC,GAClBf,KAAK,CAACT,KAAK,CAACS,KAAK,CAACT,KAAK,CAACwB,MAAM,GAAG,CAAC,CAAC,CAACvB,EAAE,GAAG,CAAC,GAC1C,CAAC;QACPQ,KAAK,CAACT,KAAK,CAACyB,IAAI,CAAC;UAAE,GAAGf,MAAM,CAACG,OAAO;UAAEZ,EAAE,EAAEsB;QAAO,CAAC,CAAC;MACrD;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEf,OAAO;EAAEM,MAAM;EAAEI;AAAU,CAAC,GAAGb,eAAe,CAACqB,OAAO;AACrE,eAAerB,eAAe,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}